Perfect üëç ‚Äî since you already have a Map<String, Object> that collects values across your flow,
let‚Äôs make this very simple, clean, and safe to use anywhere ‚Äî no complex wrapping class, just a helper utility.

‚∏ª

‚úÖ Simple MDC Helper (JsonLog replacement)

import org.slf4j.Logger;
import org.slf4j.MDC;
import java.util.Map;

public class LogHelper {

    // --- Add all entries from your map to MDC (thread-safe) ---
    public static void putAllToMDC(Map<String, ?> map) {
        if (map == null) return;
        map.forEach((k, v) -> {
            if (k != null && v != null) {
                MDC.put(k, String.valueOf(v));
            }
        });
    }

    // --- Clear MDC (important at end of request or thread) ---
    public static void clearMDC() {
        MDC.clear();
    }

    // --- Example masking if needed ---
    public static String maskMiddle(String value, int keepStart, int keepEnd) {
        if (value == null || value.isEmpty()) return "";
        int length = value.length();
        if (length <= keepStart + keepEnd) return "*".repeat(Math.max(4, length));
        return value.substring(0, keepStart)
                + "*".repeat(length - keepStart - keepEnd)
                + value.substring(length - keepEnd);
    }
}


‚∏ª

‚úÖ How to Use It

You already have something like this throughout your code:

Map<String, Object> logMap = new HashMap<>();
logMap.put("requestId", "REQ-123");
logMap.put("agentId", "AG-001");
logMap.put("execution_status", "SUCCESS");
logMap.put("policyId", LogHelper.maskMiddle("1234567890", 3, 3));

üëâ Use like this:

LogHelper.putAllToMDC(logMap);
logger.info("Notification processed successfully");
LogHelper.clearMDC();

or in error:

LogHelper.putAllToMDC(logMap);
logger.error("Notification failed", ex);
LogHelper.clearMDC();


‚∏ª

‚úÖ What Happens

With your logback-spring.xml configuration (JSON + plain appenders):
	‚Ä¢	JSON_OUT will create a structured JSON entry in Datadog with all the MDC fields
‚Üí perfect for dashboards.
	‚Ä¢	PLAIN_OUT will show just:

format=plain 2025-10-30 09:44:22.456 INFO [thread] jp.co... - Notification processed successfully

‚Üí perfect for debugging.

‚∏ª

‚úÖ Best Practice
	‚Ä¢	Call LogHelper.clearMDC() at the end of each request or execution (finally block).
If you‚Äôre in a web app ‚Üí add it in a OncePerRequestFilter.
	‚Ä¢	If you‚Äôre in an Azure Function ‚Üí clear it at the end of your run() method.

‚∏ª

Would you like me to show you a small version of how to use this helper inside an Azure Function trigger (like ServiceBusTrigger)?
That‚Äôll make it clear how to handle MDC start‚Üílog‚Üíclear in one function call.