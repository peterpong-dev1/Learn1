Short answer: Yes.
If you switch to the JSON encoder and put your key/values into MDC, Datadog will show them like your screenshot—clean JSON fields under Attributes / JSON Attributes, not one long text line.

What you’ll see in Datadog
	•	Message: your log message (e.g., “Email delivered”)
	•	level / timestamp / logger / thread: from providers
	•	Your fields (from MDC): event, execution_status, agentId, policyId (masked), requestId, etc., each as separate attributes you can facet and use in dashboards.

Minimal setup

pom.xml

<dependency>
  <groupId>net.logstash.logback</groupId>
  <artifactId>logstash-logback-encoder</artifactId>
  <version>7.4</version>
</dependency>

logback-spring.xml

<configuration>
  <appender name="JSON_OUT" class="ch.qos.logback.core.ConsoleAppender">
    <target>System.out</target>
    <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
      <providers>
        <timestamp/><logLevel/><loggerName/><threadName/>
        <message/>
        <mdc/>          <!-- <- this lifts MDC keys to top-level JSON -->
        <stackTrace/>
      </providers>
    </encoder>
  </appender>

  <root level="INFO"><appender-ref ref="JSON_OUT"/></root>
</configuration>

Code

MDC.put("event", "email_delivery");
MDC.put("execution_status", "success");         // or "failed"
MDC.put("agentId", agentId);
MDC.put("policyId", maskMiddle(policyId, 3, 3)); // your mask helper

log.info("Email delivered");                     // or log.error("...", ex)
MDC.clear();

Datadog log (top-level JSON)

{
  "timestamp":"2025-10-29T12:34:56+09:00",
  "level":"INFO",
  "message":"Email delivered",
  "event":"email_delivery",
  "execution_status":"success",
  "agentId":"AGENT-42",
  "policyId":"POL*********789"
}

Don’t embed your own JSON string in message; let the encoder + <mdc/> produce the JSON. That’s what makes Datadog show fields like your screenshot.
Optional: add static fields too (so dashboards are easier): service, env, version via a custom fields provider or MDC.